#!/usr/bin/env python
import sys

#(gdb)source /gdb_python/find.py

#searchByte = "0x464c457f"
searchByte = "0x3f6"
dumpSize = "20"

#find.txt
sys.stdout = open("/gdb_python/find.txt","w")

#gdbexecute catch exception
def gdbexecute(cmd, tostring):
	try:
		return gdb.execute(cmd,to_string=tostring)
	except:
		print("gdb.execute failed command = {0}".format(cmd))

#shell cat /proc/xxxx/maps
proc = gdbexecute('i proc map', True)
ary = proc.split('\n')
pid = ary[0].split(' ')[1]
cmd = "/proc/{0}/maps".format(pid)
maps = open(cmd).read()
print("----------------------------------------------------------------------------------------------------------")
print(cmd)
print(maps)
print("----------------------------------------------------------------------------------------------------------")
print("\n")

#find addr
print("----------------------------------------------------------------------------------------------------------")
print("searchByte {0}".format(searchByte))
print("find at")
find = ""
smap = maps.split('\n')
smap.pop()
for line in smap:
	words = line.split(' ')
	addr = words[0].split('-')
	cmd = "find 0x{0}, 0x{1}, {2}".format(addr[0],addr[1], searchByte)
	find = gdbexecute(cmd, True)

	ary = find.split('\n')
	ary.pop()
	for line2 in ary:
		faddr = line2.split(' ')
		if faddr[0][0:2] == "0x":
			print("{0}".format(faddr[0]))
			
print("----------------------------------------------------------------------------------------------------------")
print("\n")

#find 0xXXXXXXXX,0xXXXXXXXX,sesarchByte
find = ""
for line in smap:
	words = line.split(' ')
	addr = words[0].split('-')
	cmd = "find 0x{0}, 0x{1}, {2}".format(addr[0],addr[1], searchByte)
	find = gdbexecute(cmd, True)
	
	ary = find.split('\n')
	ary.pop()
	for line2 in ary:
		faddr = line2.split(' ')
		if faddr[0][0:2] == "0x":
			cmd = "x/{0}wx {1}".format(dumpSize,faddr[0])
			print("----------------------------------------------------------------------------------------------------------")
			print(line)
			print(cmd)
			str = gdbexecute(cmd,True)
			print(str)
			
sys.stdout.close()
sys.stdout = sys.__stdout__
print("write find.txt")
