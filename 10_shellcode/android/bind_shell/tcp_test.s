BITS 32
	
_start:
	;int 3				;ブレークポイント
	
	;sockfd = socket(2,1,0);
	push BYTE 0x66	;BYTE指定により、機械語に0x00が含まれなくなる。さらに、実際にpushされる値は0x00000066の４バイト	
	pop eax			;eax=0x66 socketcallのシステムコール番号
	xor ebx, ebx
	inc ebx			;ebx=1    socket()
	xor ecx,ecx
	push ecx
	push BYTE 0x1
	push BYTE 0x2
	mov ecx,esp
	int 0x80
	mov esi,eax 	;socket()の実行結果をesiに保持
	
	;bind(sockfd,(struct sockaddr *)&host_addr, sizeof(struct sockaddr));
	push BYTE 0x66	;BYTE指定により、機械語に0x00が含まれなくなる。さらに、実際にpushされる値は0x00000066の４バイト	
	pop eax			;eax=0x66 socketcallのシステムコール番号
	inc ebx			;ebx=2    bind()
	xor ecx,ecx
	push ecx			;INADDR_ANY = 0
	push WORD 0x697a	;Port = 31337 push BYTEとは異なり、2バイトしかpushされない
	push WORD 0x2		;AF_INET = 2  
	mov ecx,esp
	push BYTE 16	;BYTE指定により、機械語に0x00が含まれなくなる。さらに、実際にpushされる値は0x00000010の４バイト	
	push ecx
	push esi
	mov ecx,esp
	int 0x80
	
	;listen(sockfd, 4);
	push BYTE 0x66	;BYTE指定により、機械語に0x00が含まれなくなる。さらに、実際にpushされる値は0x00000066の４バイト	
	pop eax			;eax=0x66 socketcallのシステムコール番号
	inc ebx
	inc ebx			;ebx=4    listen()
	push BYTE 0x4
	push esi
	mov ecx, esp
	int 0x80
	
	;new_sockfd = accept(sockfd,(struct sockaddr*)&client_addr, &sin_size);
	push BYTE 0x66	;BYTE指定により、機械語に0x00が含まれなくなる。さらに、実際にpushされる値は0x00000066の４バイト	
	pop eax			;eax=0x66 socketcallのシステムコール番号
	inc ebx			;ebx=5    accept()
	xor ecx,ecx
	push ecx
	push ecx
	push esi
	mov ecx,esp
	int 0x80
	
	;write(1,"AAAAAAA",7);
	mov BYTE al,0x4 ;eax=4 write
	mov BYTE bl,0x1	;標準出力
	xor ecx,ecx
	push 0x41414141	;AAAA
	push 0x41414141	;AAAA
	mov [esp+7],cl  ;終端文字
	mov ecx,esp		;ecx=AAAAAAA\0
	xor edx,edx
	mov BYTE dl,0x7 ;edx=7 長さ
	int 0x80
